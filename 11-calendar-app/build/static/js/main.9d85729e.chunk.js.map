{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/events.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","uid","name","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","registerID","filter","authReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","localStorage","getItem","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","login","user","checkingFinish","setTokenLocalStorage","token","setItem","Date","getTime","logout","useForm","useState","fields","setfields","target","value","LoginScreen","dispatch","useDispatch","loginEmail","loginPassword","fieldsLogin","handledLoginInputChange","registerName","registerEmail","registerPassword","registerPasswordConfirm","fieldsRegister","handledRegisterInputChange","className","onSubmit","email","password","preventDefault","a","res","json","ok","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","nowPlus1","clone","initEvent","notes","start","toDate","end","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","_id","resp","console","error","getState","id","eventoGuardado","log","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isUserLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d85729e.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventStartAddNew: '[event] Start add new',\n    eventLoaded: '[event] Events loaded',\n    eventLogout: '[event] Events logout',\n    \n\n\n    authChecking: '[auth] cheqking login state',\n    authCheckingFinish: '[auth] Finish cheqking login state',\n    authStartLogin: '[auth] start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] start token renew',\n    authLogout: '[auth] Logout',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","\n\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [/* {\n        id: 'dfdffffsfd',\n        title: 'Cumpleaños del jefe',\n        start: moment().toDate(),\n        end: moment().add( 2, 'hours' ).toDate(),\n        //bgcolor: '#fafafa',\n        notes: 'Comprar el pastel',\n        user: {\n            _id: 'dadd546a5d54d6ad4',\n            name: 'Thiago Rios'\n        }\n    } */],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: action.payload\n            }\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.registerID === action.payload.registerID ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.registerID !== state.activeEvent.registerID )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLogout:\n            return {\n                ...state,\n                ...initialState\n            }\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    uid: null,\r\n    name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,                \r\n                checking: false\r\n            }\r\n        case types.authLogout:            \r\n            return {\r\n                ...state,                \r\n                ...initialState,\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n    //console.log({url})\r\n\r\n    if(method === 'GET') return fetch(url);\r\n\r\n    return fetch(url, {\r\n        method,\r\n        headers:{'Content-type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n    })\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if(method === 'GET') return fetch(url, {\r\n        method,\r\n        headers:{\r\n            'x-token': localStorage.getItem('token') || ''\r\n        }\r\n    });\r\n\r\n    return fetch(url, {\r\n        method,\r\n        headers:{\r\n            'Content-type': 'application/json',\r\n            'x-token': localStorage.getItem('token') || ''\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n        const {uid, name} = getState().authReducer;\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n            \n            if (body.ok) {\n                event.id = body.eventoGuardado.registerID\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                console.log(event)\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const startEventUpdated = (event) => {\n    return async (dispatch) => {\n        try {\n            const {registerID} = event;\n            const resp = await fetchWithToken(`events/${registerID}`, event, 'PUT');\n            const body = await resp.json();\n            const {ok} = body;\n            //console.log(body);\n            (ok) ? dispatch(eventUpdated(event)) : Swal.fire('Error',body.msg,'error')\n            \n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n        \n        try {\n            const {registerID} = getState().calendar.activeEvent;\n            const resp = await fetchWithToken(`events/${registerID}`, {}, 'DELETE');\n            const body = await resp.json();\n            const {ok} = body;\n\n            (ok) ? dispatch(eventDeleted()) : Swal.fire('Error',body.msg,'error')\n            \n        } catch (error) {\n            console.error(error);\n        }\n      \n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n            //console.log(body)\n            if (body.ok) {\n                dispatch(eventLoaded(body.eventos))\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventResent = () => ({\n    type: types.eventLogout\n})\n","import Swal from 'sweetalert2';\r\nimport { fetchSinToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventResent } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {        \r\n        const res = await fetchSinToken('auth',{email, password}, 'POST')\r\n        const body = await res.json()        \r\n        const {token, uid, name, ok} = body;\r\n        if (ok) {\r\n            setTokenLocalStorage(token);\r\n            dispatch(login({uid, name}))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const res = await fetchSinToken('auth/new',{name, email, password}, 'POST')\r\n        const body = await res.json()\r\n        //console.log(body);\r\n        const {token, uid, user, ok} = body;        \r\n        if (ok) {\r\n            setTokenLocalStorage(token);\r\n            dispatch(login({uid, name: user.name}))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async(dispatch) => {\r\n        const res = await fetchWithToken('auth/renew');\r\n        const body = await res.json()\r\n        //console.log(body);\r\n        const {ok, token, uid, name} = body;        \r\n        if (ok) {\r\n            setTokenLocalStorage(token);\r\n            dispatch(login({uid, name}))\r\n        }else{\r\n            //Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\nconst setTokenLocalStorage = (token) => {\r\n    localStorage.setItem('token', token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());//guarda la hora en que se creo el token\r\n}\r\n\r\nexport const startLogout = () => {    \r\n    return async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventResent())\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState) => {\r\n\r\n    //console.log(initialState)\r\n    \r\n    const [fields, setfields] = useState(initialState)\r\n\r\n    const resetFields = () => {\r\n        setfields(initialState);\r\n    }\r\n\r\n    const handledInputChange = ({target}) => {\r\n        //console.log(target.value)\r\n        setfields(\r\n            {\r\n                ...fields, [target.name]: target.value\r\n            }\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    return [fields, handledInputChange, resetFields]\r\n}","import React from 'react';\nimport { /* useSelector, */ useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/authActions';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n\n    const [fieldsLogin, handledLoginInputChange] = useForm(\n        {\n            loginEmail: '',\n            loginPassword: '123456'\n        }\n    )\n    const {loginEmail, loginPassword} = fieldsLogin;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        //console.log(fieldsLogin)\n        //pendiente validaciones\n        dispatch(startLogin(loginEmail, loginPassword))\n    }\n\n    ////////////// manejador de la info de creación de usuario\n    const [fieldsRegister, handledRegisterInputChange] = useForm(\n        {\n            registerName: '',\n            registerEmail: '',\n            registerPassword: '',\n            registerPasswordConfirm: '',\n        }\n    )\n    const {registerName, registerEmail, registerPassword, registerPasswordConfirm} = fieldsRegister;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        //console.log(fieldsRegister)\n        //pendiente validaciones\n        if (registerPassword !== registerPasswordConfirm) {\n            return Swal.fire('Error', 'Las contraseñas deben coincidir', 'warning')\n        }\n        dispatch(startRegister(registerName, registerEmail, registerPassword))\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name='loginEmail' value={loginEmail} onChange={handledLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"loginPassword\" value={loginPassword} onChange={handledLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                value={registerName} name='registerName' onChange={handledRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                value={registerEmail} name=\"registerEmail\" onChange={handledRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                value={registerPassword} name=\"registerPassword\" onChange={handledRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                value={registerPasswordConfirm} name=\"registerPasswordConfirm\" onChange={handledRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {startLogout} from '../../actions/authActions'\n\n\n\nexport const Navbar = () => {\n    const {name} = useSelector( state => state.authReducer );\n    const dispatch = useDispatch();\n\n    const logOut = () => {\n        dispatch(startLogout())\n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            \n            <button onClick={logOut} className=\"btn btn-outline-danger\">\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n    //console.log(event)\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, startEventUpdated } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const { uid} = useSelector( state => state.authReducer );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n               \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            Swal.fire('Nota','El titulo debe tener mas de 2 caracteres', 'warning');\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            /* console.log('activeEvent.user._id=>', activeEvent.user._id)\n            console.log({uid}) */\n            if (activeEvent.user._id === uid) {\n                /* console.log({formValues}) */\n                dispatch( startEventUpdated( formValues ) )                \n                Swal.fire('info','Evento actualizado', 'success')\n            } else {\n                Swal.fire('Error','No tienes autorización para modificar este evento', 'warning')\n            }\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport {  eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.authReducer );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    const onDoubleClick = (e) => {\n        console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n       \n        const style = {\n            backgroundColor: (event.user._id === uid)?'#367CF7':'#2626',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    useEffect(() => {\n        dispatch(eventStartLoading())\n    }, [dispatch])\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PrivateRoute = ({isUserLoggedIn, component: Component, ...rest}) => {\r\n    //console.log(rest);\r\n    //localStorage.setItem('lastPath', rest.location.pathname+rest.location.search);\r\n    return (\r\n       <Route {...rest}\r\n        component = { (props) => (\r\n            (isUserLoggedIn)\r\n            ? <Component {...props}/>\r\n            : <Redirect to=\"/login\" />\r\n        )}\r\n\r\n\r\n       />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isUserLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\nexport default PrivateRoute","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const PublicRoute = ({isUserLoggedIn, component: Component, ...rest}) => {\r\n\r\n    return (\r\n       <Route {...rest}\r\n        component = { (props) => (\r\n            (isUserLoggedIn)\r\n            ? <Redirect to=\"/\" />\r\n            : <Component {...props} />\r\n        )}\r\n\r\n\r\n       />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isUserLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\nexport default PublicRoute","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { startCheking } from '../actions/authActions';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const {checking, uid} = useSelector(state => state.authReducer)\n    //console.log({checking, name, uid})\n    useEffect(() => {\n        dispatch(startCheking())\n    }, [dispatch])\n\n    if (checking) {\n        return <h1>Waith please....</h1>\n    }\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isUserLoggedIn={!!uid}/>\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isUserLoggedIn={!!uid}/>\n                    {/* <Route exact path=\"/login\" component={ LoginScreen } />      \n                    <Route exact path=\"/\" component={ CalendarScreen } /> */}\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\n//console.log(process.env)\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}